name: CI/CD Pipeline
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

jobs:
  ci_cd:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Lint code
        run: pnpm lint
      
      - name: Build Astro site
        run: pnpm build
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          terraform_version: "~1.0"
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Setup AWS CLI profile
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          mkdir -p ~/.aws
          echo "[personal]" > ~/.aws/credentials
          echo "aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
          echo "[profile personal]" > ~/.aws/config
          echo "region = us-east-1" >> ~/.aws/config
          echo "output = json" >> ~/.aws/config
      
      - name: Terraform Init
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          cd terraform
          terraform init
      
      - name: Terraform Plan
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          cd terraform
          terraform plan -out=tfplan
      
      - name: Terraform Apply
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          cd terraform
          terraform apply -auto-approve tfplan
      
      - name: Get S3 bucket name from Terraform
        if: ${{ github.ref == 'refs/heads/main' }}
        id: terraform_output
        run: |
          cd terraform
          BUCKET_NAME=$(terraform output -raw s3_bucket_name)
          echo "bucket_name=$BUCKET_NAME" >> $GITHUB_OUTPUT
      
      - name: Sync website to S3
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          aws s3 sync dist/ s3://${{ steps.terraform_output.outputs.bucket_name }} --delete --profile personal
      
      - name: Invalidate CloudFront cache
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          cd terraform
          DISTRIBUTION_ID=$(terraform output -raw cloudfront_distribution_id)
          aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*" --profile personal
      
      - name: Display DNS configuration
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          cd terraform
          echo "========================================="
          echo "DNS CONFIGURATION FOR NIC.DO"
          echo "========================================="
          terraform output nic_do_dns_instructions
